server:
  port: 8888
  servlet:
    session:
      cookie:
        name: UISESSION
    context-path: /api
app:
  upload:
    dir: "media/files/"
spring:
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: coinkeeper
            client-secret: 1193fcd4-66fa-46c5-bcea-007cb76c635d
            clientName: Keycloak
            authorization-grant-type: authorization_code
            redirectUriTemplate: '{baseUrl}/login/oauth2/code/{registrationId}'
            scope:
              - openid
              - profile
              - email
        provider:
          keycloak:
            authorization-uri: http://localhost:8484/auth/realms/coinkeeper/protocol/openid-connect/auth
            token-uri: http://localhost:8484/auth/realms/coinkeeper/protocol/openid-connect/token
            user-info-uri: http://localhost:8484/auth/realms/coinkeeper/protocol/openid-connect/userinfo
            jwk-set-uri: http://localhost:8484/auth/realms/coinkeeper/protocol/openid-connect/certs
            user-name-attribute: preferred_username
  liquibase:
    enabled: true
    change-log: classpath:/db/baseChangelog.xml
  datasource:
    url: jdbc:postgresql://localhost:5000/db
    username: app
    password: pass
    initialization-mode: always
    platform: postgres
  jpa:
    show-sql: true
    generate-ddl: false
    hibernate:
      show-sql: true
      ddl-auto: none
keycloak:
  auth-server-url: http://localhost:8484/auth
  realm: coinkeeper
  resource: coinkeeper
  public-client: true






